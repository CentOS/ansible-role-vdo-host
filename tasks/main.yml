---
# Defaults tasks for role vdo-host

- name: Importing specific distro variables
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"
  tags:
    - vars

- name: Install the VDO packages
  ansible.builtin.dnf:
    name: "{{ vdo_pkgs_list }}"
    state: installed

- name: Create the volume group
  community.general.lvg:
    vg: "{{ vdo_vg_name }}"
    pvs: "{{ vdo_pv_disks }}"

- name: Check if the path exists
  ansible.builtin.stat:
    path: "/dev/{{ vdo_vg_name }}/{{ vdo_lv_name }}"
  register: vdo_is_present

- name: Setup VDO pool & LV
  community.general.lvol:
    vg: "{{ vdo_vg_name }}"
    lv: "{{ vdo_lv_name }}"
    size: "{{ vdo_phys_size }}"
    opts: "--type vdo --vdosettings 'vdo_slab_size_mb={{ vdo_slab_size }}' --virtualsize {{ vdo_virt_size }}"
  when: not vdo_is_present.stat.exists

- name: Manage VDO storage pool
  community.general.lvol:
    vg: "{{ vdo_vg_name }}"
    lv: vpool0
    size: "{{ vdo_phys_size }}"
    resizefs: true
  when: vdo_is_present.stat.exists

- name: Manage VDO thin LV
  community.general.lvol:
    vg: "{{ vdo_vg_name }}"
    lv: "{{ vdo_lv_name }}"
    size: "{{ vdo_virt_size }}"
    resizefs: true
  when: vdo_is_present.stat.exists

- name: Create vdo mount point
  ansible.builtin.file:
    path: "{{ vdo_mount_point }}"
    state: directory
    mode: '0755'
- name: Format the xfs filesystem
  community.general.filesystem:
    fstype: xfs
    opts: -K # no-discard is used on VDO
    dev: "/dev/{{ vdo_vg_name }}/{{ vdo_lv_name }}"
- name: Mount the lv
  ansible.posix.mount:
    path: "{{ vdo_mount_point }}"
    src: "/dev/{{ vdo_vg_name }}/{{ vdo_lv_name }}"
    fstype: xfs
    state: mounted
